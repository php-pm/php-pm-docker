FROM php:7.2-cli-alpine3.7

LABEL maintainer PHP-PM Team "REPLACE@ME.TLD"

ARG version=dev-master
ARG http_version=dev-master

ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8

# Below the following PHP extensions are installed:
# EXIF, GD, igbinary, intl, Memcached, msgpack, PDO_MYSQL, PCNTL, Redis, Sockets, Tidy, XML & ZIP.
# PHP extensions such as DOM, MBstring, OpenSSL, PDO, Tokenizer & many more are provided by the base image.
RUN set -ex \
  && apk update \
  && echo "Setting up PHP extensions" \
  && apk add --no-cache --virtual .build-deps \
     autoconf \
     freetype-dev \
     g++ \
     icu-dev \
     imagemagick-dev \
     libjpeg-turbo-dev \
     libmemcached-dev \
     libpng-dev \
     libwebp-dev \
     libxml2-dev \
     libzip-dev \
     make \
     openldap-dev \
     pcre-dev \
     re2c \
     tidyhtml-dev \
     zlib-dev \
  && pecl install imagick mailparse redis igbinary msgpack memcached \
  && docker-php-ext-enable imagick mailparse redis igbinary msgpack memcached \
  && pecl clear-cache \
  && docker-php-ext-configure gd \
    --with-gd \
    --with-png-dir=/usr/include/ \
    --with-jpeg-dir=/usr/include/ \
    --with-webp-dir=/usr/include/ \
  && docker-php-ext-configure zip --with-libzip \
  && docker-php-ext-install exif gd intl ldap opcache pdo_mysql pcntl sockets tidy xml zip \
  && apk del .build-deps \
  && apk add --no-cache \
     bash \
     freetype \
     icu \
     imagemagick \
     libmemcached-libs \
     libressl \
     libzip \
     openldap \
     tar \
     tidyhtml \
     tzdata \
     zlib \
  && echo "Fixing the timezone" \
  && cp /usr/share/zoneinfo/Etc/UTC /etc/localtime \
  && echo "UTC" | tee /etc/timezone \
  && apk del tzdata \
  && echo "Instal Composer:" \
  && curl -sS https://getcomposer.org/installer | php \
  && mv composer.phar /usr/bin/composer \
  && echo "Setting up PPM:" \
  && mkdir -p /ppm/run \
  && cd /ppm \
  && chmod -R 777 run/ \
  && composer require php-pm/php-pm:${version} php-pm/httpkernel-adapter:${http_version}

COPY run-standalone.sh /etc/app/run.sh
COPY etc/php.ini /usr/local/etc/php/conf.d/php.ini

WORKDIR /var/www

EXPOSE 80

ENTRYPOINT ["/bin/bash", "/etc/app/run.sh"]
